#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("faraway"),  pkgTest)
# set working directory
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/answers/PS5_answers")
setwd("~/Documents/QTM200Spring2020/problem_sets/answers/PS5_answers")
# set working directory
setwd("~/Documents/QTM200/QTM200Spring2020/problem_sets/answers/PS5_answers")
# set working directory
setwd("~/Emory 3rd Year/QTM 200/QTM200Spring2020/problem_sets/PS5/answers")
# load data
gamble <- (data=teengamb)
# run regression on gamble with specified predictors
model1 <- lm(gamble ~ sex + status + income + verbal, gamble)
plot(model1)
#####################
# load libraries
# set wd
# clear global .envir
#####################
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("faraway"),  pkgTest)
# set working directory
setwd("~/Emory 3rd Year/QTM 200/QTM200Spring2020/problem_sets/PS5/answers")
#####################
# Problem 1
#####################
#Part A
# load data
gamble <- (data=teengamb)
# run regression on gamble with specified predictors
model1 <- lm(gamble ~ sex + status + income + verbal, gamble)
plot(model1)
plot(model1)
#Part B
plot(model1)
# run regression on gamble with specified predictors
model1 <- lm(gamble ~ sex + status + income + verbal, gamble)
plot(model1)
plot(model1)
model1 <- lm(gamble ~ sex + status + income + verbal, gamble)
plot(model1)
plot(model1)
abline(h=2*5/47)
abline(h=3*5/47)
identity(1:47, hatvalues(model1), row.names(gamble))
#Part C
plot(hatvalues(model1))
abline(h=2*5/47)
abline(h=3*5/47)
identity(1:47, hatvalues(model1), row.names(gamble))
identity(1:47, hatvalues(model1), row.names(gamble))
identity(1:47, hat, row.names(gamble))
identity(1:47, hatvalues(model1), row.names(gamble))
identify(1:47, hatvalues(model1), row.names(gamble))
#Part C
plot(hatvalues(model1))
abline(h=2*5/47)
abline(h=3*5/47)
identify(1:47, hatvalues(model1), row.names(gamble))
identify(1:47, hatvalues(model1), row.names(gamble))
gamble
#Part D
outliertest
#Part D
outliertest(model1)
lapply(c("cars"),  pkgTest)
lapply(c(cars),  pkgTest)
#Part D
library(car)
outlierTest(model1)
#Part E
plot(hatvalues(model1),rstudent(model1), type = "n")
cooks<-sqrt(cooks.distance(model1))
points(hat,rstudent(model1), cex=10*cooks/max(cooks))
points(hatvalues(model1),rstudent(model1), cex=10*cooks/max(cooks))
abline(h=c(-2,0,2))
abline(v=c(2,3)*5/47)
abline(v=c(2,3)*5/47)
identify(hatvalues(model1), rstudent(model1), row.names(gamble))
influence.measures(model1)
#Part E
plot(hatvalues(model1),rstudent(model1), type = "n")
cooks<-sqrt(cooks.distance(model1))
points(hatvalues(model1),rstudent(model1), cex=10*cooks/max(cooks))
abline(h=c(-2,0,2))
abline(v=c(2,3)*5/47)
identify(hatvalues(model1), rstudent(model1), row.names(gamble))
influence.measures(model1)
identify(hatvalues(model1), rstudent(model1), row.names(gamble))
identify(hatvalues(model1), rstudent(model1), row.names(gamble))
outlierTest(model1)
